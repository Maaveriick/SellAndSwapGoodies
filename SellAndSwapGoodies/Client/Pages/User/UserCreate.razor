@page "/users/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Users</h3>
<hr />
<br />

<EditForm Model="@user" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>ProfilePicture:</label>
        <div>
            <InputText @bind-Value="@user.ProfilePicture" class="form-control" />
            <ValidationMessage For="@(() => user.ProfilePicture)" />
        </div>
    </div>

        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@user.Name" class="form-control" />
                <ValidationMessage For="@(() => user.Name)" />
            </div>
        </div>
        <div class="form-group">
            <label>Age: </label>
            <div>
                <InputNumber @bind-Value="@user.Age" class="form-control" />
                <ValidationMessage For="@(() => user.Age)" />
            </div>
        </div>
        <div class="form-group">
            <label>Gender: </label>
            <div>
                <InputSelect @bind-Value="user.Gender" class="form-control">
                    <option value="">-- Select Gender --</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </InputSelect>
                <ValidationMessage For="@(() => user.Gender)" />
            </div>
        </div>
        <div class="form-group">
            <label>Email: </label>
            <div>
                <InputText @bind-Value="@user.EmailAddress" class="form-control" />
                <ValidationMessage For="@(() => user.EmailAddress)" />
            </div>
        </div>
        <div class="form-group">
            <label>Password: </label>
            <div>
                <InputText @bind-Value="@user.Password" class="form-control" />
                <ValidationMessage For="@(() => user.Password)" />
            </div>
        </div>
        <button type="submit" class=" btn btn-success btn-block">
            Create User
        </button>
    <BackToList Target="users" />
</EditForm>

@*<FormComponent ButtonText="Create Dating User" datinguser="datinguser" OnValidSubmit="@CreateDatingUser" />*@


@code{
    User user = new User();


    private async Task CreateUser()
    {
        //datinguser.profile_pic_data_url = FormComponent.ProfilePicDataUrl;
        await _client.PostAsJsonAsync(Endpoints.UsersEndpoint, user);
        _navManager.NavigateTo("/users/");
    }

}
