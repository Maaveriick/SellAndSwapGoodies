@inject HttpClient _client
<EditForm Model="@delivery" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
        <fieldset disabled="@Disabled" >
        <div class="form-group">
            <label>Buyer:</label>
            <div>
                <InputSelect @bind-Value="delivery.UserID" class="form-control">
                    <option value="">-- Select Buyer --</option>
                    @if (Users != null)
                    {
                        foreach (var user in Users)
                        {
                            <option value="@user.Id">@user.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => delivery.UserID)" />
            </div>
        </div>

        <div class="form-group">
            <label>Delivery:</label>
            <div>
                <InputSelect @bind-Value="delivery.ListingID" class="form-control">
                    <option value=" ">-- Select Seller - Item - Location --</option>
                    @if (Listings != null)
                    {
                        foreach (var listing in Listings)
                        {
                            <option value="@listing.Id">@listing?.User?.Name - @listing?.Name -- @listing?.Location</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => delivery.ListingID)" />
            </div>

        </div>

           <div class="form-group">
        <label>Delivery Status</label>
        <div>
            <InputSelect @bind-Value="delivery.DeliveryStatusID" class="form-control">
                <option value=" ">-- Select Status --</option>
                @if (DeliveryStatuses != null)
                {
                    foreach (var deliverystatus in DeliveryStatuses)
                    {
                        <option value="@deliverystatus.Id">@deliverystatus?.Status</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => delivery.DeliveryStatusID)" />
        </div>
            <div class="form-group">
                <label> Estimated Arrival: </label>
                <div>
                    <div>
                        <InputDate @bind-Value="delivery.DateIn" class="form-control">
                            <ValidationMessage For="@(() => delivery.DateIn)" />
                        </InputDate>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
    </button>
    }
    <BackToList Target="deliverys" />
</EditForm>
@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Delivery? delivery { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Delivery>? Deliverys;
    private IList<Listing>? Listings;
    private IList<DeliveryStatus>? DeliveryStatuses;
    private IList<User>? Users;

    protected async override Task OnInitializedAsync()
    {
        Deliverys = await _client.GetFromJsonAsync<List<Delivery>>($"{Endpoints.DeliverysEndpoint}");
        Listings = await _client.GetFromJsonAsync<List<Listing>>($"{Endpoints.ListingsEndpoint}");
        DeliveryStatuses = await _client.GetFromJsonAsync<List<DeliveryStatus>>($"{Endpoints.DeliveryStatusesEndpoint}");
        Users = await _client.GetFromJsonAsync<List<User>>($"{Endpoints.UsersEndpoint}");
    }

}