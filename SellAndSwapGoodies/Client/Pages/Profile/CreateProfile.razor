@page "/profiles/create/"
@inject HttpClient _client
@inject NavigationManager _navManager
<h3 class=" card.title"> Create New Profiles</h3>
<hr />
<br />
<EditForm Model="@profile" OnValidSubmit="CreateNewProfile">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="form-group">
		<label> Id: </label>
		<div>
			<div>
				<InputText @bind-Value="profile.ProfileBio" class="form-control">
					<ValidationMessage For="@(() => profile.ProfileBio)" />
				</InputText>
			</div>
		</div>
	</div>
	<div class="form-group">
		<label> Picture: </label>
		<div>
			<div>
				<InputText @bind-Value="profile.ProfilePhoto" class="form-control">
					<ValidationMessage For="@(() => profile.ProfilePhoto)" />
				</InputText>
			</div>
		</div>
	</div>
	<button type="submit" class="btn btn-success btn-block">
		Create Profile
	</button>
</EditForm>

@code {
	Profile profile = new Profile();

	private IList<Profile>? Profiles;

	protected async override Task OnInitializedAsync()
	{
		Profiles = await _client.GetFromJsonAsync<List<Profile>>($"{Endpoints.ProfilesEndpoint}");
	}

	private async Task CreateNewProfile()
	{
		await _client.PostAsJsonAsync(Endpoints.ProfilesEndpoint, profile);
		_navManager.NavigateTo("/profiles");
	}
}